# .bashrc
export PS1="\[\e[1;33m\][\u@\h \W\$(git branch 2> /dev/null | grep -e '\* ' | sed 's/^..\(.*\)/{\1}/')]\$\[\e[0m\] "
# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

function rebase_foreman {
  cd ~/foreman
  git fetch upstream
  git checkout develop
  git stash
  git rebase upstream/develop
  git stash pop
  echo "upstream branch rebased"
}

function rebase_katello {
  cd ~/katello
  git fetch upstream
  git fetch fork
  git checkout master
  git rebase upstream/master
  echo "master branch rebased"
}

function search_and_replace {
  grep -rl $2 $1 | xargs sed -i s@$2@$3@g
  echo "$2 was replaced in the following places"
  grep -r $3 $1
  echo "$2 replaced with $3, you lazy bastard"
}

function restart_pulp {
  sudo systemctl stop pulp_celerybeat.service pulp_workers.service pulp_resource_manager.service
  echo "stopped pulp services"
  sudo systemctl start pulp_celerybeat.service pulp_workers.service pulp_resource_manager.service
  echo "started pulp services"
  sudo systemctl status pulp_celerybeat.service pulp_workers.service pulp_resource_manager.service
}

function setup_test_db {
  RAILS_ENV=test rake db:drop && RAILS_ENV=test rake db:create && RAILS_ENV=test rake db:test:prepare && RAILS_ENV=test rake db:migrate
  echo "test database setup"
}

function amend_and_force_push {
  git add .
  git commit --amend
  read -p "Force push? " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    git push -f fork $(git branch 2> /dev/null | grep -e '\* ' | sed 's/^..\(.*\)/\1/')
  fi
}

alias test_db_setup='cd ~/foreman; RAILS_ENV=test rake db:drop && RAILS_ENV=test rake db:create && RAILS_ENV=test rake db:test:prepare && RAILS_ENV=test rake db:migrate'
